#!/bin/sh

####
# Cleveland LCR Daemon - Control Script
#
# useage: ./cl-lcr-daemon [start|stop|register|unregister]
#
# Created by: Matthew Dunham <matt@hotcoffeydesign.com>
####

if [ ! -f /etc/cl-lcr-truck ]; then
	echo "new" > /etc/cl-lcr-truck
fi

if [ ! -f /etc/cl-lcr-uuid ]; then
	echo "new" > /etc/cl-lcr-uuid
fi

truckID=$(cat /etc/cl-lcr-truck)
oldUUID=$(cat /etc/cl-lcr-uuid)
UUID=$(mount | grep '^/dev' | grep 'on / ' |  cut -d " " -f 1)
_IP=$(hostname -I) || "no ip"

if [[ "$oldUUID" = "new" || "$oldUUID" != "$UUID" ]]; then:
	echo $UUID > /etc/cl-lcr-uuid
	UUID="$oldUUID->$UUID"
fi

payloadStr="$UUID:$truckID:$_IP"

program_is_installed() {
	local return_=1
	type $1 >/dev/null 2>&1 || { local return_=0; }
	echo "$return_"
}

program_is_running() {
	local return_=1
	pidof $1 >/dev/null 2>&1 || { local return_=0; }
	echo "$return_"
}

npm_package_is_installed() {
	local return_=1
	ls node_modules | grep $1 >/dev/null 2>&1 || { local return_=0; }
	echo "$return_"
}

echo_fail() {
	printf "\e[31m✘ ${1}"
	printf "\033\e[0m"
}

echo_pass() {
	printf "\e[32m✔ ${1}"
	printf "\033\e[0m"
}

echo_if() {
	if [ $1 == 1 ]; then
		echo_pass $2
	else
		echo_fail $2
	fi
}

case "$1" in
	start)
		echo "--------------------------"
		echo "-  CL-LCR-Daemon by HCD  -"
		echo "--------------------------"
		echo "Verifying Dependencies"
		echo " - node        $(echo_if $(program_is_installed node))"
		echo " - bleno       $(echo_if $(npm_package_is_installed bleno))"
		echo " - serialport  $(echo_if $(npm_package_is_installed serialport))"
		echo " - sqlite3  $(echo_if $(npm_package_is_installed sqlite3))"
		echo "--------------------------"
		echo -n "Starting cl-lcr-daemon - "
		service cl-lcr-daemon start
		sleep 2
		echo "$(echo_if $(program_is_running node))"
		echo "--------------------------"
		echo "Daemon Start Complete"
        ;;
	stop)
		echo "--------------------------"
		echo "-  CL-LCR-Daemon by HCD  -"
		echo "--------------------------"
		echo -n "Stopping cl-lcr-daemon - "
		service cl-lcr-daemon stop
	;;
	register)
		echo "--------------------------"
		echo "-  CL-LCR-Daemon by HCD  -"
		echo "--------------------------"
		echo "Verifying Dependencies"
		echo " - node        $(echo_if $(program_is_installed node))"
		echo " - bleno       $(echo_if $(npm_package_is_installed bleno))"
		echo " - serialport  $(echo_if $(npm_package_is_installed serialport))"
		echo " - sqlite3  $(echo_if $(npm_package_is_installed sqlite3))"
		echo "--------------------------"
		echo -n "Installing init.d script  - "
		(cp /root/cl-lcr-daemon/bin/cl-lcr-daemon /etc/init.d/cl-lcr-daemon && echo "$(echo_pass)") || echo "$(echo_fail)"
		echo -n "Setting file permissions  - "
		(chmod 755 /etc/init.d/cl-lcr-daemon && echo "$(echo_pass)") || echo "$(echo_fail)"
		echo -n "Registering script with update-rc - "
		(update-rc.d cl-lcr-daemon defaults && echo "$(echo_pass)") || echo "$(echo_fail)"
		echo "--------------------------"
		echo "Registration Complete"
	;;
	verify)
		systemctl is-active --quiet cl-lcr-daemon || (service cl-lcr-daemon start; hologram send "was_down:$payloadStr")
		python2 /root/cl-lcr-daemon/bin/gps.py
	;;
	unregister)
		echo "--------------------------"
		echo "-  CL-LCR-Daemon by HCD  -"
		echo "--------------------------"
		echo -n "Stopping the daemon - "
		killall node &> /dev/null
		killall cl-lcr-daemon &> /dev/null
		echo "$(echo_pass)"
		echo -n "Removing from update-rc.d - "
		(update-rc.d -f cl-lcr-daemon remove && echo "$(echo_pass)") || echo "$(echo_fail)"
		echo -n "Removing init.d script    - "
		(rm -f /etc/init.d/cl-lcr-daemon && echo "$(echo_pass)") || echo "$(echo_fail)"
		echo "Unregister Complete"
	;;
	*)
		echo "Usage: ./cl-lcr-cli [start|stop|register|unregister]"
		exit 1
    ;;
esac

exit 0
